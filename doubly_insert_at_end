  
#include <stdio.h>
#include<stdlib.h>

struct node
{
    int data;
    struct node*next;
    struct node*prev;
};
 int insert_beg(int value,struct node**head)
{
    struct node*newnode;
    newnode=malloc(sizeof(struct node));
    newnode->data=value;
    newnode->next=*head;
    newnode->prev=NULL;
    
    if(*head!=NULL)
    {
        (*head)->prev=newnode;
    }
    *head=newnode;
    return 0;
}

int insert_end(int value,struct node**head)
{
    struct node*newnode;
    newnode=malloc(sizeof(struct node));
        newnode->data=value;
    newnode->next=NULL;
    if(*head==NULL)
     {
         *head=newnode;
         newnode->prev=NULL;
         return 0;
     }
       struct node*temp=*head;
    
    
    while(temp->next!=NULL)
    {
        
        temp=temp->next;
        
    }
    temp->next=newnode;
    newnode->prev = temp; 

    return 0;
}

int printlist(struct node*head)
{
     struct node*temp=head;
    printf(" Doubly lINK LIST(forward):\n ");
    
    while(temp!=NULL)
    {
        printf("%d<->",temp->data);
        temp=temp->next;
        
        
    }
    printf("NULL");
    
    
    
    
    
}

void main()
{
    struct node * head=NULL;
    insert_beg(10,&head);
    insert_beg(20,&head);
    insert_beg(30,&head);
    insert_beg(40,&head);
    insert_end(480,&head);
    printlist(head);
    
    
    
    
    
}
